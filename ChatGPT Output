import UIKit

class ViewController: UIViewController, UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate {

    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var searchBar: UISearchBar!

    var restaurants = [Restaurant]()

    override func viewDidLoad() {
        super.viewDidLoad()

        tableView.dataSource = self
        tableView.delegate = self
        searchBar.delegate = self
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return restaurants.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "restaurantCell", for: indexPath) as! RestaurantTableViewCell

        let restaurant = restaurants[indexPath.row]
        cell.nameLabel.text = restaurant.name
        cell.yelpRatingLabel.text = "Yelp Rating: \(restaurant.yelpRating)"
        cell.foursquareRatingLabel.text = "Foursquare Rating: \(restaurant.foursquareRating)"
        cell.googleMapsRatingLabel.text = "Google Maps Rating: \(restaurant.googleMapsRating)"

        return cell
    }

    func searchBarSearchButtonClicked(_ searchBar: UISearchBar) {
        guard let searchText = searchBar.text else { return }

        searchForRestaurants(searchText: searchText)
    }

    func searchForRestaurants(searchText: String) {
        guard let cityState = searchBar.text else { return }

        let yelpAPIURL = "https://api.yelp.com/v3/businesses/search?term=\(searchText)&location=\(cityState)"
        let foursquareAPIURL = "https://api.foursquare.com/v2/venues/search?client_id=\(foursquareClientID)&client_secret=\(foursquareClientSecret)&v=20220501&near=\(cityState)&query=\(searchText)"
        let googleMapsAPIURL = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=\(searchText)+in+\(cityState)&key=\(googleMapsAPIKey)"

        let group = DispatchGroup()

        var yelpRating: Double = 0.0
        var foursquareRating: Double = 0.0
        var googleMapsRating: Double = 0.0

        group.enter()
        fetchRatingFromAPI(apiURL: yelpAPIURL) { (rating) in
            yelpRating = rating
            group.leave()
        }

        group.enter()
        fetchRatingFromAPI(apiURL: foursquareAPIURL) { (rating) in
            foursquareRating = rating
            group.leave()
        }

        group.enter()
        fetchRatingFromAPI(apiURL: googleMapsAPIURL) { (rating) in
            googleMapsRating = rating
            group.leave()
        }

        group.notify(queue: .main) {
            let restaurant = Restaurant(name: searchText, yelpRating: yelpRating, foursquareRating: foursquareRating, googleMapsRating: googleMapsRating)
            self.restaurants.append(restaurant)
            self.tableView.reloadData()
        }
    }

    func fetchRatingFromAPI(apiURL: String, completion: @escaping (Double) -> Void) {
        guard let url = URL(string: apiURL) else { return }

        var request = URLRequest(url: url)
        request.addValue("Bearer grFMRE44_IyYp3jwv7aygTrWYfMyb-iNVKCTS6GUkK23xiPT6WoVl1yoDZSFl4c7H_uQxuzPioQkG2PjrZ5cY2lp-m0Ne1zHOtPel3ZN3n3ONUjCcsV7QZdrUtFBZHYx", forHTTPHeaderField: "Authorization")

        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
            guard let data = data else { return }

            do {
                let json = try JSONSerialization
func fetchRatingFromAPI(apiURL: String, completion: @escaping (Double) -> Void) {
    guard let url = URL(string: apiURL) else { return }

    var request = URLRequest(url: url)
    request.addValue("Bearer grFMRE44_IyYp3jwv7aygTrWYfMyb-iNVKCTS6GUkK23xiPT6WoVl1yoDZSFl4c7H_uQxuzPioQkG2PjrZ5cY2lp-m0Ne1zHOtPel3ZN3n3ONUjCcsV7QZdrUtFBZHYx", forHTTPHeaderField: "Authorization")

    let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
        guard let data = data else { return }

        do {
            let json = try JSONSerialization.jsonObject(with: data, options: []) as? [String: Any]
            let rating = extractRatingFromAPIResponse(json: json)
            completion(rating)
        } catch {
            print("Error parsing JSON: \(error.localizedDescription)")
            completion(0.0)
        }
    }

    task.resume()
}

func extractRatingFromAPIResponse(json: [String: Any]?) -> Double {
    guard let json = json else { return 0.0 }

    if let yelpBusinesses = json["businesses"] as? [[String: Any]],
       let yelpBusiness = yelpBusinesses.first,
       let yelpRating = yelpBusiness["rating"] as? Double {
        return yelpRating
    }

    if let foursquareVenues = json["response"] as? [String: Any],
       let foursquareGroups = foursquareVenues["venues"] as? [[String: Any]],
       let foursquareGroup = foursquareGroups.first,
       let foursquareRating = foursquareGroup["rating"] as? Double {
        return foursquareRating
    }

    if let googleMapsResults = json["results"] as? [[String: Any]],
       let googleMapsResult = googleMapsResults.first,
       let googleMapsRating = googleMapsResult["rating"] as? Double {
        return googleMapsRating
    }

    return 0.0
}
class Restaurant {
    let name: String
    let yelpRating: Double
    let foursquareRating: Double
    let googleMapsRating: Double
    
    init(name: String, yelpRating: Double, foursquareRating: Double, googleMapsRating: Double) {
        self.name = name
        self.yelpRating = yelpRating
        self.foursquareRating = foursquareRating
        self.googleMapsRating = googleMapsRating
    }
}
